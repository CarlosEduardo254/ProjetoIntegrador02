// <auto-generated />
using System;
using BackendDev.Infraestrutura.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackendDev.Migrations
{
    [DbContext(typeof(DbContextApp))]
    partial class DbContextAppModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("BackendDev.Models.Coordenador.Coordenador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Contato")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("UsuarioId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Coordenadores");
                });

            modelBuilder.Entity("BackendDev.Models.Startup.AtualizacaoStartup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("StartupId")
                        .HasColumnType("char(36)");

                    b.Property<string>("TipoAtualizacao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("StartupId");

                    b.ToTable("AtualizacoesStartup");
                });

            modelBuilder.Entity("BackendDev.Models.Startup.Lucro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("StartupId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("StartupId");

                    b.ToTable("LucrosMensais");
                });

            modelBuilder.Entity("BackendDev.Models.Startup.Startup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Jornadas")
                        .HasColumnType("int");

                    b.Property<int>("ModeloNegocio")
                        .HasColumnType("int");

                    b.Property<bool>("Mvp")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Startups");
                });

            modelBuilder.Entity("BackendDev.Models.Usuario.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Contato")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("EstaAtivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TipoMembro")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("StartupUsuario", b =>
                {
                    b.Property<Guid>("MembrosId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("StartupId")
                        .HasColumnType("char(36)");

                    b.HasKey("MembrosId", "StartupId");

                    b.HasIndex("StartupId");

                    b.ToTable("StartupMembros", (string)null);
                });

            modelBuilder.Entity("BackendDev.Models.Coordenador.Coordenador", b =>
                {
                    b.HasOne("BackendDev.Models.Usuario.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("BackendDev.Models.Startup.AtualizacaoStartup", b =>
                {
                    b.HasOne("BackendDev.Models.Startup.Startup", null)
                        .WithMany("Atualizacoes")
                        .HasForeignKey("StartupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BackendDev.Models.Startup.Lucro", b =>
                {
                    b.HasOne("BackendDev.Models.Startup.Startup", null)
                        .WithMany("Lucros")
                        .HasForeignKey("StartupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StartupUsuario", b =>
                {
                    b.HasOne("BackendDev.Models.Usuario.Usuario", null)
                        .WithMany()
                        .HasForeignKey("MembrosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackendDev.Models.Startup.Startup", null)
                        .WithMany()
                        .HasForeignKey("StartupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BackendDev.Models.Startup.Startup", b =>
                {
                    b.Navigation("Atualizacoes");

                    b.Navigation("Lucros");
                });
#pragma warning restore 612, 618
        }
    }
}
